# 1. Provide the list of markets in which customer "Atliq Exclusive" 
#    operates its business in the APAC region.

select distinct market
   from dim_customer 
   where customer="Atliq Exclusive" and region="APAC";

/* 2. What is the percentage of unique product increase in 2021 vs. 2020? 
      The final output contains these fields,
	  unique_products_2020
      unique_products_2021
      percentage_chg */

select (select count(distinct(product_code)) from fact_sales_monthly where fiscal_year=2020) as unique_products_2020,  
     (select count(distinct(product_code)) from fact_sales_monthly where fiscal_year=2021) as unique_products_2021,
    ((select count(distinct(product_code)) from fact_sales_monthly where fiscal_year=2020)/(
    select count(distinct(product_code)) from fact_sales_monthly where fiscal_year=2021))*100 as pct_change;
    
/* 3. Provide a report with all the unique product counts for each 
segment and sort them in descending order of product counts. The final 
output contains 2 fields,
segment
product_count*/

select segment, count(distinct(product_code)) as product_count 
from dim_product 
group by segment 
order by product_count desc;

    
/* 4. Get the products that have the highest and lowest manufacturing costs.
The final output should contain these fields,
product_code
product
manufacturing_cost */

select p.product_code,product, manufacturing_cost from
   dim_product as p inner join fact_manufacturing_cost as m on
   p.product_code=m.product_code
   where manufacturing_cost=(select min(manufacturing_cost) 
   from fact_manufacturing_cost);
   
select p.product_code,product, manufacturing_cost from
dim_product as p inner join fact_manufacturing_cost as m on
p.product_code=m.product_code
where manufacturing_cost=(select max(manufacturing_cost) 
from fact_manufacturing_cost);
   
/* 5. Generate a report which contains the top 5 customers who received an
average high pre_invoice_discount_pct for the fiscal year 2021 and in the
Indian market. The final output contains these fields,
customer_code
customer
average_discount_percentage */

with cte as(
  select d.customer_code, customer, avg(pre_invoice_discount_pct)*100 
  as average_discount_percentage
  from dim_customer as d inner join
  fact_pre_invoice_deductions as f on
  d.customer_code=f.customer_code
  where fiscal_year=2021 and market='India'
  group by f.customer_code
  order by average_discount_percentage desc limit 5
  )
select * from cte;

/* 6. Get the complete report of the Gross sales amount for the customer “Atliq
Exclusive” for each month. This analysis helps to get an idea of low and
high-performing months and take strategic decisions.
The final report contains these columns:
Month
Year
Gross sales Amount */

WITH cte AS (
  SELECT MONTH(s.date), YEAR(s.date), gross_price * sold_quantity as gross_sales_amount
  FROM fact_sales_monthly AS s 
  INNER JOIN fact_gross_price AS p ON s.product_code = p.product_code
  INNER JOIN dim_customer AS c ON s.customer_code = c.customer_code
  WHERE c.customer = 'Atliq Exclusive'
  GROUP BY customer,MONTH(s.date)
    )
SELECT * FROM cte;
  
/* 7. In which quarter of 2020, got the maximum total_sold_quantity? The final
output contains these fields sorted by the total_sold_quantity,
Quarter
total_sold_quantity */

select quarter(s.date) as Q, sum(sold_quantity) as total_sold_quantity
from fact_sales_monthly as s
where year(s.date)=2020
group by Q
order by Q desc limit 1;

/* 8. Which channel helped to bring more gross sales in the fiscal year 2021
and the percentage of contribution? The final output contains these fields,
channel
gross_sales_mln
percentage */

SELECT channel, gross_price * sold_quantity AS gross_sales_mln 
FROM fact_sales_monthly AS s 
INNER JOIN fact_gross_price AS p ON s.product_code = p.product_code
INNER JOIN dim_customer AS c ON s.customer_code = c.customer_code
GROUP BY channel
ORDER BY gross_sales_mln DESC 
LIMIT 1;

/* 9. Get the Top 3 products in each division that have a high
total_sold_quantity in the fiscal_year 2021? The final output contains these
fields,
division
product_code
product
total_sold_quantity
rank_order */

with cte as(
select division, p.product_code,product, sum(sold_quantity) 
as total_sales, rank() over(partition by division 
order by sum(sold_quantity) desc) as sales_rank
from fact_sales_monthly as s 
inner join dim_product as p 
on s.product_code=p.product_code
where fiscal_year=2021
group by division, product
)
select * from cte where sales_rank<=3;
